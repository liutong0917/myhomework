上午:
	9:00--10:00
	10:10-11:10
	11:30-12:30

下午：
	13:30--14:20
	14:30--15:20
	15:40--16:30
	16:30--17:00 当天所学知识的总结
----------------------------------------------------------------
回顾:
	1. 获取元素的方法：
		通过ID获取，获取到的是一个；
		通过tagname获取，获取到的是一组;必须配合下标使用;aDiv[number]
	2.body的简写： document.body
	3.i++ ==> i = i + 1;
	4.if(条件){条件成立执行的语句}else{条件不成立执行的语句}
	5.this: 当前发生事件的元素;
	6.alert(要弹出的内容)
	7.innerTHML: 元素的内容，可以获取，也可以赋值;
	8.autofocus  输入框自动聚焦
	9.a标签的href="javascript:;"
	10.  .style 操作的是行间样式;
	11. 关于函数：
			1>.定义  function 函数名(){}
			2>.调用  函数名加小括号;
	12.事件调用函数不加括号;
	13.window.onload:页面加载完成之后在执行;
	14.变量：var 变量名 = 变量值;
	15.class ==> className
	16.length: 长度、个数
	17. = ： 赋值，右边赋值给左边
		==：比较;
-------------------------------------------------------
for(1.初始条件;2.判断条件;3.自增){
	//code
}

while循环的格式：
1.初始条件 var i = 0;
2.while(i < 3){//判断条件
	//code
	i++;//3自增操作
}

什么时候用for循环什么时候用while循环？？
	循环次数确定的时候用for循环;
	循环次数不确定的时候用while循环;
	
建议：
	用for循环,可读性更高,

***循环里面加事件，事件里面取不到i值;事件里面的i值是循环后的.

***循环里面套循环，两个循环的变量名不能一样;但是如果循环里面加事件，事件里面在加循环，两个循环的变量名可以一样;

点击一组div变色的步骤：
	1.先把所有的div颜色都变成默认的颜色;
	2.再把当前的div的背景色变为想要的颜色;

***只要操作一组,多个元素的时候就要用到循环;

选项卡:
	1.按钮和内容的个数是对应[相等]的;
	2.当前选中的按钮有选中状态;其他按钮没有状态
	3.和当前选中的按钮对应的元素显示，其他的元素隐藏;

选项卡步骤;
	1.先做按钮:
		1>.先清空所有按钮的className;
			for(var i = 0; i < aBtn.length; i++){
				aBtn[i].className = '';
			}
		2>.当前点击的按钮加选中的状态[className];
			this.className = 'active';
	
	2.把按钮和div关联起来;
		1>.隐藏所有的元素
			for(var i = 0; i < aDiv.length; i++){
				aDiv[i].style.display = 'none';
			}
		2>.和当前按钮对应的div显示;
			aDiv[this.index].style.display = 'block';

自定义属性：非系统自带的属性;低版本浏览器[IE7/8]可以取到值;高版本取不到值;会报出undefined;

高版本浏览器[非IE7/8]的加载过程：
	1.先加载系统自带的属性和标签;
	2.过滤自定义的标签和属性;
	3.加载JS;
			
***什么时候使用传参：
	当不确定的时候应该使用:传参
	参数相当于是变量;
	.不能操作变量,操作变量使用[];

	
传参的格式:
	function show(a,b){//.1定义一个参数
		alert(a+b);2.使用一个参数
	}
	show(1,2);3.传递一个参数
------------------------------------------------------------
总结：
	1.循环：2种
	for(1.初始;2.判断;3.自增){
		//code
	}
	
	var i = 0;//初始
	while(判断){
		//code
		i++//自增
	}
	
	2.什么时候用for什么时候用while?
		循环次数确定的时候用for,不确定的时候用while;
	    建议使用for循环;
	
	3.传参：参数相当于变量;
		function show(a,b){//定义参数
			alert(a+b);//使用参数;
		}
		show(1,2)//传递参数;
	
	4.  .不能操作变量,操作变量用[];
